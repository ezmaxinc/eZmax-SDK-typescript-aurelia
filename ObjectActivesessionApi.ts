/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.32
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { autoinject } from 'aurelia-framework';
import { HttpClient } from 'aurelia-http-client';
import { Api } from './Api';
import { AuthStorage } from './AuthStorage';
import {
  ActivesessionGetCurrentV1Response,
} from './models';

/**
 * activesessionGetCurrentV1 - parameters interface
 */
export interface IActivesessionGetCurrentV1Params {
}

/**
 * ObjectActivesessionApi - API class
 */
@autoinject()
export class ObjectActivesessionApi extends Api {

  /**
   * Creates a new ObjectActivesessionApi class.
   *
   * @param httpClient The Aurelia HTTP client to be injected.
   * @param authStorage A storage for authentication data.
   */
  constructor(httpClient: HttpClient, authStorage: AuthStorage) {
    super(httpClient, authStorage);
  }

  /**
   * Get Current Activesession
   * Retrieve the details about the current activesession
   */
  async activesessionGetCurrentV1(): Promise<ActivesessionGetCurrentV1Response> {
    // Verify required parameters are set

    // Create URL to call
    const url = `${this.basePath}/1/object/activesession/getCurrent`;

    const response = await this.httpClient.createRequest(url)
      // Set HTTP method
      .asGet()

      // Authentication 'Authorization' required
      .withHeader('Authorization', this.authStorage.getAuthorization())
      // Send the request
      .send();

    if (response.statusCode < 200 || response.statusCode >= 300) {
      throw new Error(response.content);
    }

    // Extract the content
    return response.content;
  }

}

